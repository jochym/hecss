# Autogenerated by nbdev

d = { 'settings': { 'branch': 'devel',
                'doc_baseurl': '/hecss/',
                'doc_host': 'https://jochym.github.io/',
                'git_url': 'https://gitlab.com/jochym/hecss/-/',
                'lib_path': 'hecss'},
  'syms': { 'hecss.cli': { 'hecss.cli.calculate_xscale': ('cli.html#calculate_xscale', 'hecss/cli.py'),
                           'hecss.cli.dfset_writer': ('cli.html#dfset_writer', 'hecss/cli.py'),
                           'hecss.cli.hecss_sampler': ('cli.html#hecss_sampler', 'hecss/cli.py'),
                           'hecss.cli.plot_bands': ('cli.html#plot_bands', 'hecss/cli.py'),
                           'hecss.cli.plot_stats': ('cli.html#plot_stats', 'hecss/cli.py'),
                           'hecss.cli.reshape_sample': ('cli.html#reshape_sample', 'hecss/cli.py'),
                           'hecss.cli.run_cli_cmd': ('cli.html#run_cli_cmd', 'hecss/cli.py')},
            'hecss.core': { 'hecss.core.HECSS': ('core.html#hecss', 'hecss/core.py'),
                            'hecss.core.HECSS.__init__': ('core.html#hecss.__init__', 'hecss/core.py'),
                            'hecss.core.HECSS._sampler': ('core.html#hecss._sampler', 'hecss/core.py'),
                            'hecss.core.HECSS.estimate_width_scale': ('core.html#hecss.estimate_width_scale', 'hecss/core.py'),
                            'hecss.core.HECSS.generate': ('core.html#hecss.generate', 'hecss/core.py'),
                            'hecss.core.HECSS.print_xs': ('core.html#hecss.print_xs', 'hecss/core.py'),
                            'hecss.core.HECSS.sample': ('core.html#hecss.sample', 'hecss/core.py'),
                            'hecss.core.HECSS.smpl_print': ('core.html#hecss.smpl_print', 'hecss/core.py')},
            'hecss.mh': { 'hecss.mh.HECSS_MH': ('mh.html#hecss_mh', 'hecss/mh.py'),
                          'hecss.mh.HECSS_MH.__init__': ('mh.html#hecss_mh.__init__', 'hecss/mh.py'),
                          'hecss.mh.HECSS_MH.generate': ('mh.html#hecss_mh.generate', 'hecss/mh.py'),
                          'hecss.mh.HECSS_MH_Sampler': ('mh.html#hecss_mh_sampler', 'hecss/mh.py'),
                          'hecss.mh.calc_init_xscale': ('mh.html#calc_init_xscale', 'hecss/mh.py'),
                          'hecss.mh.write_dfset': ('mh.html#write_dfset', 'hecss/mh.py')},
            'hecss.monitor': { 'hecss.monitor.build_bnd_lst': ('monitor.html#build_bnd_lst', 'hecss/monitor.py'),
                               'hecss.monitor.build_omega': ('monitor.html#build_omega', 'hecss/monitor.py'),
                               'hecss.monitor.ewma': ('monitor.html#ewma', 'hecss/monitor.py'),
                               'hecss.monitor.get_dfset_len': ('monitor.html#get_dfset_len', 'hecss/monitor.py'),
                               'hecss.monitor.load_dfset': ('monitor.html#load_dfset', 'hecss/monitor.py'),
                               'hecss.monitor.monitor_phonons': ('monitor.html#monitor_phonons', 'hecss/monitor.py'),
                               'hecss.monitor.monitor_stats': ('monitor.html#monitor_stats', 'hecss/monitor.py'),
                               'hecss.monitor.moving_average': ('monitor.html#moving_average', 'hecss/monitor.py'),
                               'hecss.monitor.plot_acceptance_history': ('monitor.html#plot_acceptance_history', 'hecss/monitor.py'),
                               'hecss.monitor.plot_band_set': ('monitor.html#plot_band_set', 'hecss/monitor.py'),
                               'hecss.monitor.plot_bands': ('monitor.html#plot_bands', 'hecss/monitor.py'),
                               'hecss.monitor.plot_bands_file': ('monitor.html#plot_bands_file', 'hecss/monitor.py'),
                               'hecss.monitor.plot_dofmu_stat': ('monitor.html#plot_dofmu_stat', 'hecss/monitor.py'),
                               'hecss.monitor.plot_hist': ('monitor.html#plot_hist', 'hecss/monitor.py'),
                               'hecss.monitor.plot_omega': ('monitor.html#plot_omega', 'hecss/monitor.py'),
                               'hecss.monitor.plot_stats': ('monitor.html#plot_stats', 'hecss/monitor.py'),
                               'hecss.monitor.plot_virial_stat': ('monitor.html#plot_virial_stat', 'hecss/monitor.py'),
                               'hecss.monitor.plot_xs_stat': ('monitor.html#plot_xs_stat', 'hecss/monitor.py'),
                               'hecss.monitor.run_alamode': ('monitor.html#run_alamode', 'hecss/monitor.py'),
                               'hecss.monitor.show_dc_conv': ('monitor.html#show_dc_conv', 'hecss/monitor.py')},
            'hecss.optimize': { 'hecss.optimize.get_sample_weights': ('optimize.html#get_sample_weights', 'hecss/optimize.py'),
                                'hecss.optimize.make_sampling': ('optimize.html#make_sampling', 'hecss/optimize.py')},
            'hecss.planner': {'hecss.planner.plan_T_scan': ('planner.html#plan_t_scan', 'hecss/planner.py')},
            'hecss.util': { 'hecss.util.calc_init_xscale': ('util.html#calc_init_xscale', 'hecss/util.py'),
                            'hecss.util.create_asap_calculator': ('util.html#create_asap_calculator', 'hecss/util.py'),
                            'hecss.util.normalize_conf': ('util.html#normalize_conf', 'hecss/util.py'),
                            'hecss.util.select_asap_model': ('util.html#select_asap_model', 'hecss/util.py'),
                            'hecss.util.write_dfset': ('util.html#write_dfset', 'hecss/util.py')},
            'hecss.xscale': {'hecss.xscale.plot_virial_stat': ('xscale.html#plot_virial_stat', 'hecss/xscale.py')}}}